public class BinaryTreeTraversal {
    private static TreeNode root;

    static private class TreeNode {
        int data;
        TreeNode left;
        TreeNode right;

        TreeNode(int data) {
            this.data = data;
            this.left = null;
            this.right = null;
        }
    }

    private void createBinaryTree() {
        TreeNode first = new TreeNode(1);
        TreeNode second = new TreeNode(2);
        TreeNode third = new TreeNode(3);
        TreeNode fourth = new TreeNode(4);
        TreeNode fifth = new TreeNode(5);
        root = first;
        root.left = second;
        root.right = third;
        second.left = fourth;
        second.right = fifth;
    }

    private void preOrderTraversal(TreeNode current) {
        //Recursive way
        if (current == null)
            return;
        System.out.print(current.data+"==>");
        preOrderTraversal(current.left);
        preOrderTraversal(current.right);
        if (current==root)
            System.out.print("Null");
    }

    public static void main(String[] args) {
        BinaryTreeTraversal traversal = new BinaryTreeTraversal();
        traversal.createBinaryTree();
        traversal.preOrderTraversal(root);
    }


}
