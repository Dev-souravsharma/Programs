import java.util.Scanner;

public class DoublyLinked_InsertEnd {
    private static Node head;
    private static Node tail;

    static class Node {
        int data;
        Node next;
        Node prev;

        Node(int data) {
            this.data = data;
            this.next = null;
            this.prev = null;
        }
    }

    private static void insertEnd(int value) {
        Node n = new Node(value);
        if (head == null)
            head = n;
        else {
            tail.next = n;
            n.prev = tail;
        }
        tail = n;
    }

    private static void displayForward(Node head) {
        Node current = head;
        while (current != null) {
            System.out.print(current.data + "==>");
            current = current.next;
        }
        System.out.print("null");
    }

    private static void displayBackward(Node tail) {
        Node current = tail;
        while (current != null) {
            System.out.print(current.data + "==>");
            current = current.prev;
        }
        System.out.print("null");
    }

    public static void main(String[] args) {
        Scanner s = new Scanner(System.in);
        int i = 1;
        while (i <= 5) {
            int n = s.nextInt();
            insertEnd(n);
            i++;
        }
        displayForward(head);
        System.out.println();
        displayBackward(tail);
    }
}
