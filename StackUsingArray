
class Stack {
    static final int n = 100;
    int[] arr = new int[n];
    int top;

    Stack() {
        top = -1;
    }

    //Creating isEmpty() method
    boolean isEmpty() {
        return top < 0;
    }

    //Creating push() method
    boolean push(int n) {
        if (top > n - 1) {
            System.out.println("Stack Overflow");
            return false;
        } else {
            arr[++top] = n;
            return true;
        }
    }

    //Creating peek() method
    int peek() {
        if (top < 0) {
            System.out.println("Stack Underflow");
            return -1;
        } else {
            return arr[top];
        }
    }

    //Creating pop() method
    int pop() {
        if (top < 0)
            return -1;
        else {
            return arr[top--];
        }

    }
}

public class StackUsingArray {
    public static void main(String[] args) {
        Stack stack = new Stack();
        System.out.println(stack.isEmpty());
        System.out.println(stack.push(20));
        System.out.println(stack.push(10));
        System.out.println(stack.peek());
        System.out.println("=============");
        System.out.println(stack.pop());
        System.out.println(stack.peek());

    }

}
